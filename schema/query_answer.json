{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryAnswer",
  "description": "responses to queries",
  "anyOf": [
    {
      "description": "response listing the current admin addresses",
      "type": "object",
      "required": [
        "admins"
      ],
      "properties": {
        "admins": {
          "type": "object",
          "required": [
            "admins"
          ],
          "properties": {
            "admins": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HumanAddr"
              }
            }
          }
        }
      }
    },
    {
      "description": "display the public info of an example NFT",
      "type": "object",
      "required": [
        "nft_listing_display"
      ],
      "properties": {
        "nft_listing_display": {
          "type": "object",
          "required": [
            "mintable",
            "nft_contract_address",
            "nft_info"
          ],
          "properties": {
            "mintable": {
              "description": "true if this minting option can mint one more nft",
              "type": "boolean"
            },
            "nft_contract_address": {
              "description": "nft contract address that will contain this token,",
              "allOf": [
                {
                  "$ref": "#/definitions/HumanAddr"
                }
              ]
            },
            "nft_info": {
              "description": "the nft fields of interest",
              "allOf": [
                {
                  "$ref": "#/definitions/NftDossierForListing"
                }
              ]
            }
          }
        }
      }
    },
    {
      "description": "display the gumball counts",
      "type": "object",
      "required": [
        "counts"
      ],
      "properties": {
        "counts": {
          "type": "object",
          "required": [
            "available",
            "released"
          ],
          "properties": {
            "available": {
              "description": "count of available NFTs",
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "released": {
              "description": "number of NFTs released",
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      }
    },
    {
      "description": "display the address and code hash of the nft contract this gumball is used with",
      "type": "object",
      "required": [
        "nft_contract"
      ],
      "properties": {
        "nft_contract": {
          "type": "object",
          "required": [
            "address",
            "code_hash"
          ],
          "properties": {
            "address": {
              "$ref": "#/definitions/HumanAddr"
            },
            "code_hash": {
              "type": "string"
            }
          }
        }
      }
    }
  ],
  "definitions": {
    "Authentication": {
      "description": "media file authentication",
      "type": "object",
      "properties": {
        "key": {
          "description": "either a decryption key for encrypted files or a password for basic authentication",
          "type": [
            "string",
            "null"
          ]
        },
        "user": {
          "description": "username used in basic authentication",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "Extension": {
      "description": "metadata extension You can add any metadata fields you need here.  These fields are based on https://docs.opensea.io/docs/metadata-standards and are the metadata fields that Stashh uses for robust NFT display.  Urls should be prefixed with `http://`, `https://`, `ipfs://`, or `ar://`",
      "type": "object",
      "properties": {
        "animation_url": {
          "description": "url to a multimedia attachment",
          "type": [
            "string",
            "null"
          ]
        },
        "attributes": {
          "description": "item attributes",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Trait"
          }
        },
        "background_color": {
          "description": "background color represented as a six-character hexadecimal without a pre-pended #",
          "type": [
            "string",
            "null"
          ]
        },
        "description": {
          "description": "item description",
          "type": [
            "string",
            "null"
          ]
        },
        "external_url": {
          "description": "url to allow users to view the item on your site",
          "type": [
            "string",
            "null"
          ]
        },
        "image": {
          "description": "url to the image",
          "type": [
            "string",
            "null"
          ]
        },
        "image_data": {
          "description": "raw SVG image data (not recommended). Only use this if you're not including the image parameter",
          "type": [
            "string",
            "null"
          ]
        },
        "media": {
          "description": "media files as specified on Stashh that allows for basic authenticatiion and decryption keys. Most of the above is used for bridging public eth NFT metadata easily, whereas `media` will be used when minting NFTs on Stashh",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/MediaFile"
          }
        },
        "name": {
          "description": "name of the item",
          "type": [
            "string",
            "null"
          ]
        },
        "protected_attributes": {
          "description": "a select list of trait_types that are in the private metadata.  This will only ever be used in public metadata",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "youtube_url": {
          "description": "url to a YouTube video",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "HumanAddr": {
      "type": "string"
    },
    "MediaFile": {
      "description": "media file",
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "authentication": {
          "description": "authentication information",
          "anyOf": [
            {
              "$ref": "#/definitions/Authentication"
            },
            {
              "type": "null"
            }
          ]
        },
        "extension": {
          "description": "file extension",
          "type": [
            "string",
            "null"
          ]
        },
        "file_type": {
          "description": "file type Stashh currently uses: \"image\", \"video\", \"audio\", \"text\", \"font\", \"application\"",
          "type": [
            "string",
            "null"
          ]
        },
        "url": {
          "description": "url to the file.  Urls should be prefixed with `http://`, `https://`, `ipfs://`, or `ar://`",
          "type": "string"
        }
      }
    },
    "Metadata": {
      "description": "token metadata",
      "type": "object",
      "properties": {
        "extension": {
          "description": "optional on-chain metadata.  Only use this if you are not using `token_uri`",
          "anyOf": [
            {
              "$ref": "#/definitions/Extension"
            },
            {
              "type": "null"
            }
          ]
        },
        "token_uri": {
          "description": "optional uri for off-chain metadata.  This should be prefixed with `http://`, `https://`, `ipfs://`, or `ar://`.  Only use this if you are not using `extension`",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "MintRunInfo": {
      "description": "information about the minting of the NFT",
      "type": "object",
      "properties": {
        "collection_creator": {
          "description": "optional address of the SNIP-721 contract creator",
          "anyOf": [
            {
              "$ref": "#/definitions/HumanAddr"
            },
            {
              "type": "null"
            }
          ]
        },
        "mint_run": {
          "description": "optional number of the mint run this token was minted in.  This is used to serialize identical NFTs",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0.0
        },
        "quantity_minted_this_run": {
          "description": "optional total number of NFTs minted on this run.  This is used to represent that this token is number m of n",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0.0
        },
        "serial_number": {
          "description": "optional serial number in this mint run.  This is used to serialize identical NFTs",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0.0
        },
        "time_of_minting": {
          "description": "optional time of minting (in seconds since 01/01/1970)",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "token_creator": {
          "description": "optional address of this NFT's creator",
          "anyOf": [
            {
              "$ref": "#/definitions/HumanAddr"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "NftDossierForListing": {
      "description": "NftDossier info stripped down to the listing contract's fields of interest",
      "type": "object",
      "properties": {
        "mint_run_info": {
          "description": "optional mint run information for this token",
          "anyOf": [
            {
              "$ref": "#/definitions/MintRunInfo"
            },
            {
              "type": "null"
            }
          ]
        },
        "public_metadata": {
          "description": "optional public metadata that can be seen by everyone",
          "anyOf": [
            {
              "$ref": "#/definitions/Metadata"
            },
            {
              "type": "null"
            }
          ]
        },
        "royalty_info": {
          "description": "optional royalty information for this token",
          "anyOf": [
            {
              "$ref": "#/definitions/RoyaltyInfo"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "Royalty": {
      "description": "data for a single royalty",
      "type": "object",
      "required": [
        "rate"
      ],
      "properties": {
        "rate": {
          "description": "royalty rate",
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        },
        "recipient": {
          "description": "address to send royalties to",
          "anyOf": [
            {
              "$ref": "#/definitions/HumanAddr"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "RoyaltyInfo": {
      "description": "all royalty information",
      "type": "object",
      "required": [
        "decimal_places_in_rates",
        "royalties"
      ],
      "properties": {
        "decimal_places_in_rates": {
          "description": "decimal places in royalty rates",
          "type": "integer",
          "format": "uint8",
          "minimum": 0.0
        },
        "royalties": {
          "description": "list of royalties",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Royalty"
          }
        }
      }
    },
    "Trait": {
      "description": "attribute trait",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "display_type": {
          "description": "indicates how a trait should be displayed",
          "type": [
            "string",
            "null"
          ]
        },
        "max_value": {
          "description": "optional max value for numerical traits",
          "type": [
            "string",
            "null"
          ]
        },
        "trait_type": {
          "description": "name of the trait",
          "type": [
            "string",
            "null"
          ]
        },
        "value": {
          "description": "trait value",
          "type": "string"
        }
      }
    }
  }
}
